#!/bin/bash
echo " nvOC by fullzero, V0019-2.0 - Community Release"
echo " Backup your old 1bash and any important stuff"
sleep 5


if [[ -z $(head /home/m1/1bash | grep '19.2\|19-2') ]]; then
  echo "First things first, your 1bash is old, lets put the new 1bash to Downloads folder"
  while [[ -e /home/m1/Downloads/1bash  ]]
  do
    echo "There is a 1bash in Downloads folder, move it to some where else"
    echo "Waiting 30 seconds to move it"
    sleep 30
  done
  cd /home/m1/Downloads
  echo "wget https://www.dropbox.com/s/p5dvgyaoy73s8sc/1bash"
  wget https://www.dropbox.com/s/p5dvgyaoy73s8sc/1bash
  echo "New 1bash is added to /home/m1/Downloads"
  echo "You can now stop update to edit and make your new 1bash ready"
else
  echo "Your 1bash is v0019-2, No edits needed"
fi

sleep 1;echo "";echo ""

echo "wait 30 seconds, if you have not edited your new 1bash or not backed up yet HIT ctrl+c NOW"
sleep 1;echo "";echo ""
echo "DO NOT OPEN THE TERMINAL OR RESTART THE RIG UNTIL UPDATE IS FINISHED AND EDITED YOUR NEW 1BASH"
echo "";echo ""
sleep 30;echo "";echo ""

echo " Stopping gnome-terminal, miner, wdog, temp, ..."
echo "pkill -f gnome-terminal"
pkill -f gnome-terminal
echo "pkill -f WATCHDOG"
pkill -f WATCHDOG
echo "pkill -f GRAM"
pkill -f GRAM
echo "pkill -f TEMP"
pkill -f TEMP
echo "pkill -f PAPAMPI"
pkill -f PAPAMPI
echo "pkill -e screen"
pkill -e screen

sleep 1;echo "";echo ""

echo "Checking hostname conflict"
if [[ -z $(cat /etc/hosts | grep $(cat /etc/hostname) ) ]]
then
  echo "hostname has conflict, temporarily fixing it"
  echo "sudo hostname m1-desktop"
  sudo hostname m1-desktop
else
  echo "No Problems found"
fi

sleep 1;echo "";echo ""

echo "Fix 19.1-4 fstab problem"

if [[ -z $(cat /etc/fstab | grep "#UUID=55184403759586FB")  ]] && [[ -n $(cat /etc/fstab | grep "UUID=55184403759586FB") ]]
then
  echo "sudo sed -i -e 's/UUID=55184403759586FB/#UUID=55184403759586FB/g' /etc/fstab"
  sudo sed -i -e 's/UUID=55184403759586FB/#UUID=55184403759586FB/g' /etc/fstab
elif [[ -z $(cat /etc/fstab | grep "#/dev/disk/by-id/usb-SanDisk_Cruzer_Blade_4C530001260812105231") ]] && [[ -n $(cat /etc/fstab | grep "/dev/disk/by-id/usb-SanDisk_Cruzer_Blade_4C530001260812105231") ]]
then
  echo "sudo sed -i -e 's\/dev/disk/by-id/usb-SanDisk_Cruzer_Blade_4C530001260812105231\#/dev/disk/by-id/usb-SanDisk_Cruzer_Blade_4C530001260812105231\g' /etc/fstab"
  sudo sed -i -e 's\/dev/disk/by-id/usb-SanDisk_Cruzer_Blade_4C530001260812105231\#/dev/disk/by-id/usb-SanDisk_Cruzer_Blade_4C530001260812105231\g' /etc/fstab
else
  echo "fstab has no problem"
fi


sleep 1;echo "";echo ""

echo "sudo dpkg --configure -a"
sudo dpkg --configure -a
echo "Updating and Upgrading system packages and installing needed packages"
sudo -- sh -c 'apt update; apt upgrade -y; apt autoremove -y; apt autoclean -y; sudo apt install -y moreutils gawk'


sleep 1;echo "";echo ""

if [[ -z  $(cat /etc/screenrc | grep nvoc_log) ]]
then
  echo "Moving miner screenlog.o to tmpf to lower disk read/writes"
  echo "sudo echo logfile  /home/m1/nvoc_logs/screenlog.0 | sudo tee -a  /etc/screenrc"
  sudo echo "logfile  /home/m1/nvoc_logs/screenlog.0" | sudo tee -a  /etc/screenrc
  sleep 1;echo "";echo ""
else
  echo "screen settings for screenlog.0 is ok"
fi

sleep 1;echo "";echo ""

if [[ -z  $(cat /etc/fstab | grep nvoc_log) ]]
then
  echo "making tmpfs nvoc_logs folder for logs"
  sleep 1;echo "";echo ""
  echo "mkdir -p /home/m1/nvoc_logs"
  mkdir -p /home/m1/nvoc_logs
  echo "sudo echo tmpfs /home/m1/nvoc_logs tmpfs defaults,noatime,nosuid,nodev,noexec,mode=1777,size=512M 0 0 | sudo tee -a   /etc/fstab"
  sudo echo "tmpfs /home/m1/nvoc_logs tmpfs defaults,noatime,nosuid,nodev,noexec,mode=1777,size=512M 0 0" | sudo tee -a   /etc/fstab
  echo "sudo mount -a"
  sudo mount -a
else
  echo "tmpfs nvoc_logs already created"
fi

sleep 1;echo "";echo ""

echo "Checking DSTM zm miner 0.5.6"
if [ ! /home/m1/Downloads/miners/DSTM_0.5.6.tar.gz ]
then
  echo "Downloading and making changes for DSTM ZM miner 0.5.6"
  echo "Downloading dstm zm miner 5_6"
  mkdir -p /home/m1/Downloads/miners
  echo "cd /home/m1/Downloads/miners"
  cd /home/m1/Downloads/miners
  wget https://www.dropbox.com/s/6wxsvia4bvnwf3k/DSTM_0.5.6.tar.gz
  echo "Extracting the zm miner"
  tar -xvzf DSTM_0.5.6.tar.gz
  echo "mkdir -p /home/m1/zec/zm/5_6"
  mkdir -p /home/m1/zec/zm/5_6
  echo "mv /home/m1/Downloads/miners/5_6 /home/m1/zec/zm"
  mv /home/m1/Downloads/miners/5_6 /home/m1/zec/zm/
  echo "chmod a+x /home/m1/zec/zm/5_6/zm"
  chmod a+x /home/m1/zec/zm/5_6/zm_miner
  echo "mkdir -p /home/m1/zec/zm/latest"
  mkdir -p /home/m1/zec/zm/latest
  echo "cp /home/m1/zec/zm/5_6/zm_miner /home/m1/zec/zm/latest/zm_miner"
  cp /home/m1/zec/zm/5_6/zm_miner /home/m1/zec/zm/latest/zm_miner
  echo "chmod a+x /home/m1/zec/zm/latest/zm_miner"
  chmod a+x /home/m1/zec/zm/latest/zm_miner
else
  echo "DSTM zm miner 0.5.6 already downloaded"
fi

sleep 1;echo "";echo ""

echo "Checking Claymore directory"
if [[ ! -d /home/m1/eth/claymore/ ]]
then
  echo "Moving claymore old miners"
  echo "mkdir -p /home/m1/eth/claymore/"
  mkdir -p /home/m1/eth/claymore/
  echo "mkdir -p /home/m1/eth/claymore/10_2"
  mkdir -p /home/m1/eth/claymore/10_2
  echo "mkdir -p /home/m1/eth/claymore/latest"
  mkdir -p /home/m1/eth/claymore/latest
  echo "cd /home/m1/eth/"
  cd /home/m1/eth/
  echo "cp -r 8_0 9_4 9_5 9_7 9_8 10_0 /home/m1/eth/claymore/"
  cp -r 8_0 9_4 9_5 9_7 9_8 10_0 /home/m1/eth/claymore/
  echo "rm -rf 8_0 9_4 9_5 9_7 9_8 10_0 "
  rm -rf 8_0 9_4 9_5 9_7 9_8 10_0
else
  echo "Claymore directory structre already fixed"
fi

sleep 1;echo "";echo ""

echo "Checking Claymore 10.02"
if [ ! /home/m1/Downloads/miners/Claymore-v10.2.tar.gz ]
then
  echo "Downloading and making changes for Claymore 10_2"
  mkdir -p /home/m1/Downloads/miners
  echo "cd /home/m1/Downloads/miners"
  cd /home/m1/Downloads/miners
  wget https://www.dropbox.com/s/dbwl2bs4olazyh6/Claymore-v10.2.tar.gz
  echo "tar -xvzf Claymore-v10.2.tar.gz"
  tar -xvzf Claymore-v10.2.tar.gz
  mv /home/m1/Downloads/miners/Claymore-v10.2/ /home/m1/eth/claymore/10_2/
  echo "cp /home/m1/eth/claymore/10_2/* /home/m1/eth/claymore/latest/"
  cp /home/m1/eth/claymore/10_2/* /home/m1/eth/claymore/latest/
  echo "chmod a+x /home/m1/eth/claymore/*/ethdcrminer64"
  chmod a+x  /home/m1/eth/claymore/latest/ethdcrminer64
else
  echo "Claymore-v10.2 already downloaded"
fi

sleep 1;echo "";echo ""

mkdir -p /home/m1/Downloads/miners
echo "cd /home/m1/Downloads/miners"
cd /home/m1/Downloads/miners

echo "Checking Tpruvot ccminer-2.2.3"
if [ ! /home/m1/Downloads/miners/ccminer-2.2.3-tpruvot.tar.gz ]
then
  echo "Downloading Tpruvot 2.2.3"
  echo "wget -c https://www.dropbox.com/s/ys9pgw0cvmfwd0y/ccminer-2.2.3-tpruvot.tar.gz"
  wget -c https://www.dropbox.com/s/ys9pgw0cvmfwd0y/ccminer-2.2.3-tpruvot.tar.gz
  echo "Extracting Tpruvot 2.2.3"
  tar -xvzf ccminer-2.2.3-tpruvot.tar.gz
  echo "rm -rf /home/m1/TPccminer"
  rm -rf /home/m1/TPccminer
  echo "mv /home/m1/Downloads/miners/TPccminer/ /home/m1/TPccminer/"
  mv /home/m1/Downloads/miners/TPccminer/ /home/m1/TPccminer/
else
  echo "Tpccminer-2.2.3 already downloaded"
fi

sleep 1;echo "";echo ""
echo "Checking KlausT ccminer 8.15"
if [[ ! /home/m1/Downloads/miners/KTccminer-8.15.tar.gz ]]
then
  mkdir -p /home/m1/Downloads/miners
  echo "cd /home/m1/Downloads/miners"
  cd /home/m1/Downloads/miners
  echo "Downloading Klaust ccminer 8.15"
  echo "wget -c https://www.dropbox.com/s/zqa9mqt5zzx8owr/KTccminer-8.15.tar.gz"
  wget -c https://www.dropbox.com/s/zqa9mqt5zzx8owr/KTccminer-8.15.tar.gz
  echo "Extracting KTccminer-8.15.tar.gz"
  tar -xvzf KTccminer-8.15.tar.gz
  echo "rm -rf /home/m1/KTccminer"
  rm -rf /home/m1/KTccminer
  echo "mv /home/m1/Downloads/miners/TPccminer/ /home/m1/TPccminer/"
  mv /home/m1/Downloads/miners/TPccminer/ /home/m1/TPccminer/
else
  echo "KTccminer-8.15 already downloaded"
fi

sleep 1;echo "";echo ""
echo "Checking vertminer-1.8.3r4"
if [ ! /home/m1/Downloads/miners/vertminer-1.8.3r4.tar.gz ]
then
  mkdir -p /home/m1/Downloads/miners
  echo "cd /home/m1/Downloads/miners"
  cd /home/m1/Downloads/miners
  echo "Downloading vertminer-1.8.3r4"
  echo "https://www.dropbox.com/s/0mhxbcu0v1c7pfj/vertminer-1.8.3r4.tar.gz"
  wget -c https://www.dropbox.com/s/0mhxbcu0v1c7pfj/vertminer-1.8.3r4.tar.gz
  echo "Extracting vertminer-1.8.3r4.tar.gz"
  tar -xvzf vertminer-1.8.3r4.tar.gz
  echo "mv /home/m1/Downloads/miners/vertminer/ /home/m1/vertminer/"
  mv /home/m1/Downloads/miners/vertminer/ /home/m1/vertminer/
else
  echo "vertminer-1.8.3r4 already downloaded"
fi

sleep 1;echo "";echo ""
echo "Checking nanashi-ccminer-2.2"
if [ ! /home/m1/Downloads/miners/nanashi-ccminer-2.2.tar.gz ]
then
  mkdir -p /home/m1/Downloads/miners
  echo "cd /home/m1/Downloads/miners"
  cd /home/m1/Downloads/miners
  echo "Downloading nanashi ccminer 2.2"
  wget -c https://www.dropbox.com/s/fw4aqkr0ke3hbvt/nanashi-ccminer-2.2.tar.gz
  echo "Extracting nanashi-ccminer-2.2.tar.gz"
  tar -xvzf nanashi-ccminer-2.2.tar.gz
  echo "mv /home/m1/Downloads/miners/nanashi-ccminer/ /home/m1/nanashi-ccminer/"
  mv /home/m1/Downloads/miners/nanashi-ccminer/ /home/m1/nanashi-ccminer/
else
  echo "nanashi-ccminer-2.2 already downloaded"
fi

sleep 1;echo "";echo ""
echo "Checking KXccminer-skunk-2.2"
if [ ! /home/m1/Downloads/miners/KXccminer-skunk-2.2.tar.gz ]
then
  mkdir -p /home/m1/Downloads/miners
  echo "cd /home/m1/Downloads/miners"
  cd /home/m1/Downloads/miners
  echo "Downloading krnlx ccminer 2.2"
  wget -c https://www.dropbox.com/s/c3ogj353mmaumua/KXccminer-skunk-2.2.tar.gz
  echo "Extracting KXccminer-skunk-2.2.tar.gz"
  tar -xvzf KXccminer-skunk-2.2.tar.gz
  echo "mv /home/m1/Downloads/miners/KXccminer-skunk/ /home/m1/KXccminer-skunk/"
  mv /home/m1/Downloads/miners/KXccminer-skunk/ /home/m1/KXccminer-skunk/
else
  echo "KXccminer-skunk-2.2 already downloaded"
fi

echo "Downloading new miners finished"

sleep 1;echo "";echo ""

cd /home/m1/Downloads
echo "Downloading V19.2 unofficial updates"
if [ -e /home/m1/Downloads/nvOC-19-2.tar.gz ]
then
  rm /home/m1/Downloads/nvOC-19-2.tar.gz
fi
wget https://www.dropbox.com/s/bajt2gaf87kgjrp/nvOC-19-2.tar.gz
echo "Extracting the update files"
tar -xvzf nvOC-19-2.tar.gz
echo "Making sure update files are in correct format"
dos2unix /home/m1/Downloads/nvOC-19-2/*

sleep 1;echo "";echo ""

echo " Checking hostname and permanently fixing it if there is conflict"
if [[ -z $(cat /etc/hosts | grep $(cat /etc/hostname) ) ]]
then
  echo "hostanema has conflict, Permanently fixing it"
  echo "sudo cp /home/m1/Downloads/nvOC-19-2/hosts /etc/hosts"
  sudo cp /home/m1/Downloads/nvOC-19-2/hosts /etc/hosts
  echo "sudo cp /home/m1/Downloads/nvOC-19-2/hostname /etc/hostname"
  sudo cp /home/m1/Downloads/nvOC-19-2/hostname /etc/hostname
else
  echo "hostname had no conflicts"
fi

sleep 1;echo "";echo ""

if [ ! -d /home/m1/backups/old_to_19.2 ]
then
  echo "Making a backup of changed files in /home/m1/backups"
  echo "mkdir -p /home/m1/backups"
  mkdir -p /home/m1/backups
  echo "mkdir -p /home/m1/backups/old_to_19.2"
  mkdir -p /home/m1/backups/old_to_19.2
  sleep 1;echo "";echo ""
  echo "cp /home/m1/1bash /home/m1/backups/old_to_19.2/1bash.bak"
  cp /home/m1/1bash /home/m1/backups/old_to_19.2/1bash.bak
  echo "cp /home/m1/3main /home/m1/backups/old_to_19.2/3main.bak"
  cp /home/m1/3main /home/m1/backups/old_to_19.2/3main.bak
  echo "mv /home/m1/Maxximus007_AUTO_TEMPERATURE_CONTROL /home/m1/backups/old_to_19.2/Maxximus007_AUTO_TEMPERATURE_CONTROL.bak"
  mv /home/m1/Maxximus007_AUTO_TEMPERATURE_CONTROL /home/m1/backups/old_to_19.2/Maxximus007_AUTO_TEMPERATURE_CONTROL.bak
  echo "mv /home/m1/IAmNotAJeep_and_Maxximus007_WATCHDOG /home/m1/backups/old_to_19.2/IAmNotAJeep_and_Maxximus007_WATCHDOG.bak"
  mv /home/m1/IAmNotAJeep_and_Maxximus007_WATCHDOG /home/m1/backups/old_to_19.2/IAmNotAJeep_and_Maxximus007_WATCHDOG.bak
  echo "mv /home/m1/PAPAMPI_WTM /home/m1/backups/old_to_19.2/PAPAMPI_WTM.bak"
  mv /home/m1/PAPAMPI_WTM /home/m1/backups/old_to_19.2/PAPAMPI_WTM.bak
  echo "mv /home/m1/PAPAMPI_PROFIT_CHECK /home/m1/backups/old_to_19.2/PAPAMPI_PROFIT_CHECK.bak"
  mv /home/m1/PAPAMPI_PROFIT_CHECK /home/m1/backups/old_to_19.2/PAPAMPI_PROFIT_CHECK.bak
  echo "mv /home/m1/WTM_AUTO_SWITCH /home/m1/backups/old_to_19.2/WTM_AUTO_SWITCH.bak"
  mv /home/m1/WTM_AUTO_SWITCH /home/m1/backups/old_to_19.2/WTM_AUTO_SWITCH.bak
  echo "cp /home/m1/2unix /home/m1/backups/old_to_19.2/2unix.bak"
  cp /home/m1/2unix /home/m1/backups/old_to_19.2/2unix.bak
else
  echo "No new backups, already have backups in /home/m1/backups/old_to_19.2"
fi

sleep 1;echo "";echo ""

echo "Copying updates"

sleep 1;echo "";echo ""

echo "cp /home/m1/Downloads/nvOC-19-2/2unix /home/m1/2unix"
cp /home/m1/Downloads/nvOC-19-2/2unix /home/m1/2unix
echo "cp /home/m1/Downloads/nvOC-19-2/0miner /home/m1/0miner"
cp /home/m1/Downloads/nvOC-19-2/0miner /home/m1/0miner
echo "cp /home/m1/Downloads/nvOC-19-2/3main /home/m1/3main"
cp /home/m1/Downloads/nvOC-19-2/3main /home/m1/3main
echo "cp /home/m1/Downloads/nvOC-19-2/log_rotate /home/m1/log_rotate"
cp /home/m1/Downloads/nvOC-19-2/log_rotate /home/m1/log_rotate
echo "cp /home/m1/Downloads/nvOC-19-2/ext/minerinfo /home/m1/www/cgi-bin/minerinfo"
cp /home/m1/Downloads/nvOC-19-2/ext/minerinfo /home/m1/www/cgi-bin/minerinfo
echo "cp /home/m1/Downloads/nvOC-19-2/telegram /home/m1/telegram"
cp /home/m1/Downloads/nvOC-19-2/telegram /home/m1/telegram
echo "cp /home/m1/Downloads/nvOC-19-2/6tempcontrol /home/m1/6tempcontrol"
cp /home/m1/Downloads/nvOC-19-2/6tempcontrol /home/m1/6tempcontrol
echo "cp /home/m1/Downloads/nvOC-19-2/5watchdog /home/m1/5watchdog"
cp /home/m1/Downloads/nvOC-19-2/5watchdog /home/m1/5watchdog
echo "cp /home/m1/Downloads/nvOC-19-2/8wtm_auto_switch /home/m1/8wtm_auto_switch"
cp /home/m1/Downloads/nvOC-19-2/8wtm_auto_switch /home/m1/8wtm_auto_switch
echo "cp /home/m1/Downloads/nvOC-19-2/8wtm_profit_check /home/m1/8wtm_profit_check"
cp /home/m1/Downloads/nvOC-19-2/8wtm_profit_check /home/m1/8wtm_profit_check
echo "cp /home/m1/Downloads/nvOC-19-2/ext/WTM_SWITCHER /home/m1/WTM_SWITCHER"
cp /home/m1/Downloads/nvOC-19-2/ext/WTM_SWITCHER /home/m1/WTM_SWITCHER
echo "cp /home/m1/Downloads/nvOC-19-2/screenrc-tempcontrol /home/m1/screenrc-tempcontrol"
cp /home/m1/Downloads/nvOC-19-2/screenrc-tempcontrol /home/m1/screenrc-tempcontrol
echo "cp /home/m1/Downloads/nvOC-19-2/screenrc-watchdog /home/m1/screenrc-watchdog"
cp /home/m1/Downloads/nvOC-19-2/screenrc-watchdog /home/m1/screenrc-watchdog
echo "cp /home/m1/Downloads/nvOC-19-2/nvOC /home/m1/nvOC"
cp /home/m1/Downloads/nvOC-19-2/ext/nvOC /home/m1/nvOC

sleep 1;echo "";echo ""

echo "chmod a+x /home/m1/www/cgi-bin/minerinfo"
chmod a+x /home/m1/www/cgi-bin/minerinfo
echo "chmod a+x /home/m1/www/cgi-bin/clearalerts"
chmod a+x /home/m1/www/cgi-bin/clearalerts
echo "touch /home/m1/5_watchdoglog"
touch /home/m1/5_watchdoglog
echo "touch /home/m1/6_autotemplog"
touch /home/m1/6_autotemplog
echo "touch /home/m1/WTM_switch_history"
touch /home/m1/WTM_switch_history
echo "touch /home/m1/nvoc_logs/screenlog.0"
touch /home/m1/nvoc_logs/screenlog.0
echo "chmod 666 /home/m1/nvoc_logs/*"
chmod 666 /home/m1/nvoc_logs/*
echo "chmod 666 /home/m1/6_autotemplog"
chmod 666 /home/m1/6_autotemplog
echo "chmod 666 /home/m1/5_watchdoglog"
chmod 666 /home/m1/5_watchdoglog
echo "chmod a+x /home/m1/nvOC"
chmod a+x /home/m1/nvOC
sleep 1;echo "";echo ""


touch /home/m1/.bash_aliases
if [[ -z  $(cat /home/m1/.bash_aliases | grep master-log) ]]
then
  echo "Adding master-log alias"
  echo "alias master-log='tail -f /home/m1/nvoc_logs/screenlog.0 /home/m1/nvoc_logs/tempcontrol-screenlog.0 /home/m1/nvoc_logs/watchdog-screenlog.0 /home/m1/5_watchdoglog /home/m1/6_autotemplog /home/m1/nvoc_logs/8_wtmautoswitchlog' " | tee -a /home/m1/.bash_aliases
  echo "If local_or_remote=remote, run master-log in guake or ssh sessions, to watch all your logs live"
  echo " "
  sleep 5
fi

if [[ -z  $(cat /home/m1/.bash_aliases | grep miner-restart) ]]
then
  echo "Adding miner-restart alias"
  echo "alias miner-restart='pkill -f 5watchdog && pkill -f 3main'" | tee -a /home/m1/.bash_aliases
  echo "run miner-restart in guake or ssh sessions, to restart 3main"
  echo " "
  sleep 5
fi


if [[ -z $(head /home/m1/1bash | grep '19.2\|19-2' ) ]]; then
  echo "1bash is not V0019-2"
  echo "cp /home/m1/Downloads/nvOC-19-2/1bash /home/m1/1bash"
  cp /home/m1/Downloads/nvOC-19-2/1bash /home/m1/1bash
elif [[ -z $(head /home/m1/1bash | grep 'v0019-2.0.001' ) ]]; then
  echo "**************************************************************************************************************************"
  echo "**************************************************************************************************************************"
  echo "**************************************************************************************************************************"
  echo "**************************************************************************************************************************"
  echo "                                Your 1bash is not latest version"
  echo "           New 1bash v0019-2.0.001 available in /home/m1/Downloads/nvOC-19-2/1bash"   
  echo "           Dont forget to update your 1bash for all the latest updates take effect"
  echo "**************************************************************************************************************************"
  echo "**************************************************************************************************************************"
  echo "**************************************************************************************************************************"
  echo "**************************************************************************************************************************"
  sleep 2
else
  echo " 1bash latest version"
fi


sleep 1;echo "";echo ""

echo "All Done"
echo "Old 1bash, 3main, wdog and temp are copied to /home/m1/backups/old_to_19.2/*.bak"
echo "Edit your 1bash, Set auto start miner then reboot your rig"
echo "Keep Calm and Carry on Mining"
